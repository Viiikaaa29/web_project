{"version":3,"sources":["script.js"],"names":["Component","radius","color","x","y","type","this","speedX","speedY","gravity","gravitySpeed","bounce","context","ctx","fillStyle","update","myGameArea","Math","PI","arc","fill","newPos","rockbottom","hitBottom","crashWith","otherobj","distanceX","distanceY","sqrt","myBall","canvas","distance","start","getContext","frameNo","score","bestScores","JSON","parse","localStorage","getItem","setInterval","updateGameArea","document","getElementById","e","preventDefault","keys","keyCode","window","clearRect","width","height","clearInterval","interval","push","sort","a","b","slice","setItem","stringify","myBalls","startGame","clear","everyinterval","floor","random","minRadius","maxRadius","i","length","checkGameOver","n","updateBestScores","stop","updateScore","stats","innerHTML","worstScores","alert"],"mappings":"aACA,SAASA,UAAUC,EAAQC,EAAOC,EAAGC,EAAGC,GADxCC,KAAAD,KAAAA,EACAC,KAASN,OAATC,EACIK,KAAKD,EAALF,EACAG,KAAKL,EAALG,EACAE,KAAAC,OAAA,EACAD,KAAAE,OAAA,EACAF,KAAKC,QAAL,GACAD,KAAKE,aAAL,EACAF,KAAKG,OAAU,GACfH,KAAKI,MAAAA,EACLJ,KAAKK,OAAS,WACd,IAAKT,EAAQA,WAAbU,QAGEC,EAAIC,UAAYR,KAAKJ,MAFvBW,EAAKE,YACHF,EAAIA,IAAMG,KAAAA,EAAAA,KAAWJ,EAAAA,KAArBX,OAAA,EAAA,EAAAgB,KAAAC,IACAL,EAAIC,QAEJD,KAAIM,OAAJ,WACAN,KAAIO,cAAJd,KAAAG,QALFH,KAAAH,GAAAG,KAAAC,OAUED,KAAKF,GAAKE,KAAKE,OAASF,KAAKI,aAH/BJ,KAAKe,aAEHf,KAAKH,UAAUI,WACf,IAAAe,EAAed,WAAcE,OAAAA,OAA7BJ,KAAAL,OACKsB,KAAAA,EAALD,IAJFhB,KAAAF,EAAAkB,EAUIhB,KAAKI,cAAiBJ,KAAKI,aAAeJ,KAAKK,SAGnDL,KAAKkB,UAAY,SAASC,GALxB,IAAIC,EAASJ,KAAbnB,EAAyBsB,EAAAtB,EACvBwB,EAASL,KAATlB,EAAAqB,EAAArB,EAED,OADMM,KAAekB,KAAEF,EAAKhB,EAAoBC,EAA/CgB,GACDrB,KAAAL,OAAAwB,EAAAxB,QAID,IA+BA4B,OA/BAb,WAAa,CACbc,OAAIC,SAAWd,eAAUS,YACzBM,MAAOD,WAJTzB,KAAAM,QAAAN,KAAAwB,OAAAG,WAAA,MAQF3B,KAAA4B,QAAA,EAMI5B,KAAK6B,MAAQ,EACb7B,KAAK8B,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GANpExB,KAAAA,SAAayB,YAAAC,eAAA,IACfZ,OAAQa,iBAASC,UAAe,SADjBC,GAEVA,EAAEC,iBACL9B,WAAe+B,KAAKjB,WAAOG,MAAZ,GACfjB,WAAe+B,KAAfF,EAAAG,UAAA,IAEAC,OAAKb,iBAAkBE,QAAMC,SAAaC,GAQxCxB,WAAW+B,KAAKF,EAAEG,UAAW,KAL7BH,MAAEC,WASJxC,KAAKM,QAAQsC,UAAU,EAAG,EAAG5C,KAAKwB,OAAOqB,MAAO7C,KAAKwB,OAAOsB,SAP1DpC,KAAAA,WAHFqC,cAAA/C,KAAAgD,WAMEtC,iBAAgB6B,WADlBvC,KAAA8B,WAAAmB,KAAAjD,KAAA6B,OAba7B,KAAA8B,WAAAoB,KAAA,SAAAC,EAAAC,GAiBV,OAAEA,EAAAD,IAjBQnD,KAAA8B,WAAA9B,KAAA8B,WAAAuB,MAAA,EAAA,GAoBXpB,aAAEqB,QAAW,aAAAvB,KAAAwB,UAAAvD,KAAA8B,eAKf0B,QAAK1B,GAEJ,SAFD2B,YAGA/C,WAAKoB,QAUPP,OAAS,IAAI7B,UAAU,GAAI,MAAO,GAAI,KAtCxC,SAAA0C,iBA4CE,GAXEb,WAAJmC,QACIF,WAAU5B,SAAd,EAU6B,IAAvBlB,WAAWkB,SAAiB+B,cAAc,KAAM,CARtD,IAASF,EAAAA,WAAYjC,OAAAqB,MACnBnC,EAAWgB,KAAXkC,MAAAjD,KAAAkD,SAAAnD,WAAAc,OAAAsB,QACMgB,EAAOpE,GACdqE,EAAA,GAUOpE,EAASgB,KAAKiD,MAAMjD,KAAKkD,UAAYE,EAAYD,EAAY,IAAMA,EARlE1B,KAATwB,MAA0B,EAAAjD,KAAAkD,UACxBnD,QAAWgD,KAAX,IAAAhE,UAAAC,EAAA,OAAAE,EAAAC,EAAA,SAGE,GAAID,cAAc,KAAC2B,CACd3B,EAAGc,WAAWA,OAAKkD,MACpBC,EAAAA,KAASF,MAAbjD,KAAAkD,SAAAnD,WAAAc,OAAAsB,QACIiB,EAAJ,GACIpE,EAAciE,GACd3D,EAASU,KAAKiD,MAAMjD,KAAKkD,UAAhBE,EAAbD,EAAA,IAAAA,EACanD,KAAIjB,MAAJ,EAAAiB,KAAchB,UAG7B6D,QAAAP,KAAA,IAAAvD,UAAAC,EAAA,MAAAE,EAAAC,EAAA,aACA,IAAI6D,IAAAA,EAAAA,EAAcK,EAAlBR,QAAwBS,OAAAD,IACtBR,QAAQ9C,GAAAA,GAAU,EAClB8C,QAAQ7C,GAAKiD,SAIbrC,OAAItB,OAASU,EACb6C,OAAOtD,OAAM,EACdQ,WAAA+B,OAAA/B,WAAA+B,KAAA,KAAA/B,WAAA+B,KAAA,OAAAlB,OAAAtB,QAAA,GAWGS,WAAW+B,OAAS/B,WAAW+B,KAAK,KAAO/B,WAAW+B,KAAK,OAAOlB,OAAOtB,OAAS,GATjFS,WAAY+B,OAAGe,WAAiBf,KAAI,KAAA/B,WAAA+B,KAAA,OAAAlB,OAAAnB,cAAA,GACvCoD,WAAAf,OAAA/B,WAAA+B,KAAA,KAAA/B,WAAA+B,KAAA,OAAAlB,OAAAnB,aAAA,GAIFmB,OAAAR,SASAQ,OAAOd,SACPyD,gBATA3C,cAEA,SAAIb,cAAAyD,GAAkE5C,OAAAA,WAAgBK,QAAhBuC,EAAA,GAAA,EACtE,SAAIzD,gBAAkEa,IAAAA,IAAOtB,EAAP,EAAgB+D,EAAhBR,QAAAS,OAAAD,IAAqB,GAAAzC,OAAAL,UAAAsC,QAAAQ,IAAA,CAkBvF,GAAyB,QAArBR,QAAQQ,GAAGpE,MAKb,OAJAc,WAAW0D,mBAlBb1D,MAAU,aAA8DA,WAACN,aAAqBM,WAAA2D,OAC9F3D,WAAAmB,OAAoBnB,GAAoD8C,QAACpD,OAAP4D,EAAA,GAA2B,OAKjGM,SAAAA,cACD,IAAAC,EAAAlC,SAAAC,eAAA,SA2BCiC,EAAMC,UAAY,GAzBpBD,EAASZ,WAAcQ,eAAGzD,WAAAmB,MAAA,SACxB0C,EAAK7D,WAAWkB,0BAAyB,IAAA,IAAOoC,EAAP,EAAAA,EAAAtD,WAAAoB,WAAAmC,OAAAD,IAAaO,EAAAC,WAAA,SAAAR,EAAA,GAAA,KAAAtD,WAAAoB,WAAAkC,GAAA,SAgCtD,IAAIS,EAAc/D,WAAWoB,WAAWuB,QA5B1CoB,EAASP,KAAAA,SAAgBf,EAAAC,GACvB,OAAUD,EAAVC,IAEIqB,EAAYT,EAARX,MAAJ,EAAgC,GAC9B3C,EAAAA,WAAW0D,2BA8BjB,IAASJ,EAAI,EAAGA,EAAIS,EAAYR,OAAQD,IA7BlCU,EAAAA,WAAK,SAALV,EAAA,GAAA,KAAAS,EAAAT,GAAA,SAIDP","file":"script.min.js","sourcesContent":["// Function component\r\nfunction Component(radius, color, x, y, type) {\r\n    this.type = type;\r\n    this.radius = radius;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n    this.gravity = 0.1;\r\n    this.gravitySpeed = 0;\r\n    this.bounce = 0.6;\r\n    this.color = color;\r\n    this.update = function() {\r\n      var ctx = myGameArea.context;\r\n      ctx.fillStyle = this.color;\r\n      ctx.beginPath();\r\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n    this.newPos = function() {\r\n      this.gravitySpeed += this.gravity;\r\n      this.x += this.speedX;\r\n      this.y += this.speedY + this.gravitySpeed;\r\n      this.hitBottom();\r\n    }\r\n    this.hitBottom = function() {\r\n      var rockbottom = myGameArea.canvas.height - this.radius;\r\n      if (this.y > rockbottom) {\r\n        this.y = rockbottom;\r\n        this.gravitySpeed = -(this.gravitySpeed * this.bounce);\r\n      }\r\n    }\r\n    this.crashWith = function(otherobj) {\r\n      var distanceX = this.x - otherobj.x;\r\n      var distanceY = this.y - otherobj.y;\r\n      var distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\r\n      return distance < this.radius + otherobj.radius;\r\n    }\r\n  }\r\n\r\n  // Game area\r\n  var myGameArea = {\r\n    canvas: document.getElementById(\"myCanvas\"),\r\n    start: function() {\r\n      this.context = this.canvas.getContext(\"2d\");\r\n      this.frameNo = 0;\r\n      this.score = 0;\r\n      this.bestScores = JSON.parse(localStorage.getItem(\"bestScores\")) || []; // Завантаження кращих результатів з localStorage\r\n      this.interval = setInterval(updateGameArea, 20);\r\n      window.addEventListener('keydown', function (e) {\r\n        e.preventDefault(); // Заборона дії за замовчуванням\r\n        myGameArea.keys = (myGameArea.keys || []);\r\n        myGameArea.keys[e.keyCode] = true;\r\n      })\r\n      window.addEventListener('keyup', function (e) {\r\n        myGameArea.keys[e.keyCode] = false;\r\n      })\r\n    },\r\n    clear: function() {\r\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n    stop: function() {\r\n      clearInterval(this.interval);\r\n    },\r\n    updateBestScores: function() {\r\n      this.bestScores.push(this.score);\r\n      this.bestScores.sort(function(a, b) {\r\n        return b - a;\r\n      });\r\n      this.bestScores = this.bestScores.slice(0, 3); // Обмеження масиву до трьох найкращих результатів\r\n      localStorage.setItem(\"bestScores\", JSON.stringify(this.bestScores)); // Збереження кращих результатів в localStorage\r\n    }\r\n  }\r\n\r\n  var myBall;\r\n  var myBalls = [];\r\n\r\n  function startGame() {\r\n    myGameArea.start();\r\n    myBall = new Component(15, \"red\", 10, 120);\r\n  }\r\n\r\n  function updateGameArea() {\r\n    myGameArea.clear();\r\n    myGameArea.frameNo += 1;\r\n    if (myGameArea.frameNo === 1 || everyinterval(150)) {\r\n      var x = myGameArea.canvas.width;\r\n      var y = Math.floor(Math.random() * myGameArea.canvas.height);\r\n      var minRadius = 10;\r\n      var maxRadius = 20;\r\n      var radius = Math.floor(Math.random() * (maxRadius - minRadius + 1)) + minRadius;\r\n      var speedX = Math.floor(Math.random() * 4) - 2;\r\n      myBalls.push(new Component(radius, \"blue\", x, y, \"ball\"));\r\n    }\r\n\r\n    // Додавання червоної перешкоди кожних 10 секунд\r\n    if (everyinterval(200)) {\r\n      var x = myGameArea.canvas.width;\r\n      var y = Math.floor(Math.random() * myGameArea.canvas.height);\r\n      var minRadius = 10;\r\n      var maxRadius = 20;\r\n      var radius = Math.floor(Math.random() * (maxRadius - minRadius + 1)) + minRadius;\r\n      var speedX = Math.floor(Math.random() * 4) - 2;\r\n      myBalls.push(new Component(radius, \"red\", x, y, \"obstacle\"));\r\n    }\r\n\r\n    for (var i = 0; i < myBalls.length; i++) {\r\n      myBalls[i].x -= 1;\r\n      myBalls[i].update();\r\n    }\r\n\r\n    // Покращене управління м'ячиком\r\n    myBall.speedX = 0;\r\n    myBall.speedY = 0;\r\n    if (myGameArea.keys && (myGameArea.keys[37] || myGameArea.keys[65])) {myBall.speedX = -4; } // Вліво\r\n    if (myGameArea.keys && (myGameArea.keys[39] || myGameArea.keys[68])) {myBall.speedX = 4; } // Вправо\r\n    if (myGameArea.keys && (myGameArea.keys[38] || myGameArea.keys[87])) {myBall.gravitySpeed = -4; } // Вверх\r\n    if (myGameArea.keys && (myGameArea.keys[40] || myGameArea.keys[83])) {myBall.gravitySpeed = 4; } // Вниз\r\n\r\n    myBall.newPos();\r\n    myBall.update();\r\n    checkGameOver();\r\n    updateScore(); // Виклик функції для виведення статистики результатів\r\n  }\r\n\r\n  function everyinterval(n) {\r\n    if ((myGameArea.frameNo / n) % 1 === 0) {return true;}\r\n    return false;\r\n  }\r\n\r\n  function checkGameOver() {\r\n    for (var i = 0; i < myBalls.length; i++) {\r\n      if (myBall.crashWith(myBalls[i])) {\r\n        if (myBalls[i].color === \"red\") {\r\n          myGameArea.updateBestScores(); // Оновлення кращих результатів\r\n          alert(\"Game Over\");\r\n          myGameArea.clear();\r\n          myGameArea.stop();\r\n          return;\r\n        } else {\r\n          myGameArea.score += 10; // Нарахування балів при зіткненні з синьою кулькою\r\n          myBalls.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateScore() {\r\n    var stats = document.getElementById(\"stats\");\r\n    stats.innerHTML = \"\"; // Очистка статистики перед виведенням нових даних\r\n    stats.innerHTML += \"<div>Score: \" + myGameArea.score + \"</div>\";\r\n    stats.innerHTML += \"<div>Best Scores:</div>\";\r\n    for (var i = 0; i < myGameArea.bestScores.length; i++) {\r\n      stats.innerHTML += \"<div>\" + (i+1) + \". \" + myGameArea.bestScores[i] + \"</div>\";\r\n    }\r\n\r\n    // Додаємо статистику трьох найгірших результатів\r\n    var worstScores = myGameArea.bestScores.slice(); // Копіюємо масив, щоб не змінювати оригінал\r\n    worstScores.sort(function(a, b) {\r\n      return a - b;\r\n    }); // Сортуємо за зростанням\r\n    worstScores = worstScores.slice(0, 3); // Вибираємо перші три елементи (найменші значення)\r\n    stats.innerHTML += \"<div>Worst Scores:</div>\";\r\n    for (var i = 0; i < worstScores.length; i++) {\r\n      stats.innerHTML += \"<div>\" + (i+1) + \". \" + worstScores[i] + \"</div>\";\r\n    }\r\n  }\r\n\r\n  startGame();"]}